!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var o=t();for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(this,()=>(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{headers:()=>s});const o=require("async_hooks"),r=e=>globalThis[e],n=function({name:e}){const t=Symbol.for(`xmcp-context-${e}`);if(r(t))return r(t);const n=new o.AsyncLocalStorage,i={provider:(e,t)=>n.run(e,t),getContext:()=>{const t=n.getStore();if(!t)throw new Error(`getContext() can only be used within the ${e} context.`);return t},setContext:t=>{const o=n.getStore();if(!o)throw new Error(`setContext() can only be used within the ${e} context.`);Object.assign(o,t)}};return((e,t)=>{globalThis[e]=t})(t,i),i}({name:"http-request-context"}),i=(n.setContext,n.getContext),s=(n.provider,()=>i().headers);return t})());